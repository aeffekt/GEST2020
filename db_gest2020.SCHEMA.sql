BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "LISTAS" (
	"LISTA"	TEXT NOT NULL,
	"CÓDIGO"	TEXT,
	"CANT"	REAL,
	"UN"	TEXT,
	FOREIGN KEY("CÓDIGO") REFERENCES "MAESTRO"("CÓDIGO") ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY("LISTA") REFERENCES "MAESTRO"("CÓDIGO") ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "OT" (
	"ORDEN"	INTEGER,
	"CÓDIGO"	TEXT,
	"CANT"	INTEGER DEFAULT 0,
	"PRECIO"	REAL DEFAULT 0,
	"MONTO"	REAL DEFAULT 0,
	FOREIGN KEY("CÓDIGO") REFERENCES "MAESTRO"("CÓDIGO") ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "RUBROS" (
	"RUBRO"	TEXT NOT NULL,
	PRIMARY KEY("RUBRO")
);
CREATE TABLE IF NOT EXISTS "UNDO" (
	"INDEX"	REAL,
	"RUBRO"	TEXT
);
CREATE TABLE IF NOT EXISTS "MAESTRO" (
	"CÓDIGO"	TEXT NOT NULL,
	"DESCRIPCIÓN"	TEXT,
	"UN"	TEXT DEFAULT UN,
	"PRECIO"	REAL DEFAULT 0,
	"FECHA_PRECIO"	TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	"FECHA_ALTA"	TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	"RUBRO"	TEXT,
	PRIMARY KEY("CÓDIGO"),
	FOREIGN KEY("RUBRO") REFERENCES "RUBROS"("RUBRO") ON UPDATE CASCADE ON DELETE SET NULL
);
CREATE TRIGGER ot_monto_update
             AFTER UPDATE ON "OT"
             WHEN old.CANT <> new.CANT
             	 OR old.PRECIO <> new.PRECIO
             BEGIN
                 UPDATE "OT" SET "MONTO" = ROUND(new.PRECIO * new.CANT, 3) WHERE "ORDEN" = new.ORDEN AND "CÓDIGO" = new.CÓDIGO;
             END;
CREATE TRIGGER ot_monto_insert
             AFTER INSERT ON "OT"
             BEGIN
                 UPDATE "OT" SET "MONTO" = ROUND(new.PRECIO * new.CANT, 3) WHERE "ORDEN" = new.ORDEN AND "CÓDIGO" = new.CÓDIGO;
             END;
CREATE TRIGGER rubros_insert
             AFTER INSERT ON "RUBROS"
             BEGIN
                 INSERT INTO "UNDO" VALUES(NULL,'DELETE FROM "RUBROS" WHERE rowid='||new.rowid);
             END;
CREATE TRIGGER rubros_update
             AFTER UPDATE ON "RUBROS"
             BEGIN
                 INSERT INTO "UNDO" VALUES(NULL,'UPDATE "RUBROS" SET "RUBRO"='||quote(old.RUBRO)||'
	   											WHERE rowid='||old.rowid);
        END;
CREATE TRIGGER maestro_fecha_precio
             AFTER UPDATE ON "MAESTRO"
             WHEN old.PRECIO <> new.PRECIO
             BEGIN
                 UPDATE "MAESTRO" SET "FECHA_PRECIO" = CURRENT_TIMESTAMP WHERE "CÓDIGO" = new.CÓDIGO;
             END;
COMMIT;
